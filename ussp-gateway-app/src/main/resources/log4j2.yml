#8个级别，按照从低到高为：ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
Configuration:  
  status: ERROR   #打印级别
  monitorinterval: 10 #监测时间间隔，单位秒
  Properties: # 定义全局变量
    Property: # 缺省配置（用于开发环境）。其他环境需要在VM参数中指定，如下：  
      #测试：-Dlog.level.console=warn
      #生产：-Dlog.level.console=warn
      - name: log.level.console
        value: INFO
      - name: log.level.file
        value: INFO
      - name: LOG_HOME
        value: logs
      - name: PROJECT_NAME
        value: /gateway/ussp-gateway-app
      - name: CONAOLE_LOG_PATTERN
        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight{%5p} %style{%X{pid}}{magenta} [%15.15t] %style{%-40.40c{1}}{Cyan} %4L : %m%n"
      - name: FILE_LOG_PATTERN
        value: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p %X{pid} [%15.15t] %-40.40c{1} : %m%n"
  Appenders:
    Console:  #输出到控制台
      name: CONSOLE
      target: SYSTEM_OUT
      PatternLayout:
        pattern: ${CONAOLE_LOG_PATTERN}
    RollingFile: # 输出到文件，超过100MB归档，定义超过指定大小自动删除旧日志，创建新日志
      - name: ROLLING_FILE
        immediateFlush: true
        bufferedIO: true
        bufferSize: 2097152
        fileName: ${LOG_HOME}/${PROJECT_NAME}.log
        filePattern: ${LOG_HOME}/${PROJECT_NAME}_%d{yyyy-MM-dd}.log  
        PatternLayout:
          pattern: ${FILE_LOG_PATTERN}
        Policies:  #滚动日志的策略
          TimeBasedTriggeringPolicy:  #按天分类，基于时间
            interval: 1
            modulate: true
          SizeBasedTriggeringPolicy:  #基于大小
            size: "100 MB"  
  Loggers: 
    Root:  #指定项目的根日志
      level: info
      AppenderRef:
        - ref: CONSOLE
        - ref: ROLLING_FILE #开发环境无需产生日志文件
    Logger: # 单独设置某些包的输出级别
      - name: com.ht.ussp.gateway.app.filter
        additivity: false #去除重复的Log
        level: ERROR
        AppenderRef:
          - ref: CONSOLE